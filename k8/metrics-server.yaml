# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   annotations:
#     deployment.kubernetes.io/revision: "1"
#     kubectl.kubernetes.io/last-applied-configuration: |
#       {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"metrics-server"}},"strategy":{"rollingUpdate":{"maxUnavailable":0}},"template":{"metadata":{"labels":{"k8s-app":"metrics-server"}},"spec":{"containers":[{"args":["--cert-dir=/tmp","--secure-port=4443","--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname","--kubelet-use-node-status-port","--metric-resolution=15s"],"image":"k8s.gcr.io/metrics-server/metrics-server:v0.6.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/livez","port":"https","scheme":"HTTPS"},"periodSeconds":10},"name":"metrics-server","ports":[{"containerPort":4443,"name":"https","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/readyz","port":"https","scheme":"HTTPS"},"initialDelaySeconds":20,"periodSeconds":10},"resources":{"requests":{"cpu":"100m","memory":"200Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-dir"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"system-cluster-critical","serviceAccountName":"metrics-server","volumes":[{"emptyDir":{},"name":"tmp-dir"}]}}}}
#   creationTimestamp: "2024-12-03T23:33:48Z"
#   generation: 1
#   labels:
#     k8s-app: metrics-server
#   name: metrics-server
#   namespace: kube-system
#   resourceVersion: "2814"
#   uid: 01b92993-467b-40e7-961b-f87f99b96c9c
# spec:
#   progressDeadlineSeconds: 600
#   replicas: 1
#   revisionHistoryLimit: 10
#   selector:
#     matchLabels:
#       k8s-app: metrics-server
#   strategy:
#     rollingUpdate:
#       maxSurge: 25%
#       maxUnavailable: 0
#     type: RollingUpdate
#   template:
#     metadata:
#       creationTimestamp: null
#       labels:
#         k8s-app: metrics-server
#     spec:
#       containers:
#       - args:
#         - --cert-dir=/tmp
#         - --secure-port=4443
#         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
#         - --kubelet-use-node-status-port
#         - --metric-resolution=15s
#         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.0
#         imagePullPolicy: IfNotPresent
#         livenessProbe:
#           failureThreshold: 3
#           httpGet:
#             path: /livez
#             port: https
#             scheme: HTTPS
#           periodSeconds: 10
#           successThreshold: 1
#           timeoutSeconds: 1
#         name: metrics-server
#         ports:
#         - containerPort: 4443
#           name: https
#           protocol: TCP
#         readinessProbe:
#           failureThreshold: 3
#           httpGet:
#             path: /readyz
#             port: https
#             scheme: HTTPS
#           initialDelaySeconds: 20
#           periodSeconds: 10
#           successThreshold: 1
#           timeoutSeconds: 1
#         resources:
#           requests:
#             cpu: 100m
#             memory: 200Mi
#         securityContext:
#           allowPrivilegeEscalation: false
#           readOnlyRootFilesystem: true
#           runAsNonRoot: true
#           runAsUser: 1000
#         terminationMessagePath: /dev/termination-log
#         terminationMessagePolicy: File
#         volumeMounts:
#         - mountPath: /tmp
#           name: tmp-dir
#       dnsPolicy: ClusterFirst
#       nodeSelector:
#         kubernetes.io/os: linux
#       priorityClassName: system-cluster-critical
#       restartPolicy: Always
#       schedulerName: default-scheduler
#       securityContext: {}
#       serviceAccount: metrics-server
#       serviceAccountName: metrics-server
#       terminationGracePeriodSeconds: 30
#       volumes:
#       - emptyDir: {}
#         name: tmp-dir
# status:
#   conditions:
#   - lastTransitionTime: "2024-12-03T23:33:48Z"
#     lastUpdateTime: "2024-12-03T23:33:48Z"
#     message: Deployment does not have minimum availability.
#     reason: MinimumReplicasUnavailable
#     status: "False"
#     type: Available
#   - lastTransitionTime: "2024-12-03T23:33:48Z"
#     lastUpdateTime: "2024-12-03T23:34:57Z"
#     message: ReplicaSet "metrics-server-6cbf7cc895" is progressing.
#     reason: ReplicaSetUpdated
#     status: "True"
#     type: Progressing
#   observedGeneration: 1
#   replicas: 1
#   unavailableReplicas: 1
#   updatedReplicas: 1
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"metrics-server"}},"strategy":{"rollingUpdate":{"maxUnavailable":0}},"template":{"metadata":{"labels":{"k8s-app":"metrics-server"}},"spec":{"containers":[{"args":["--cert-dir=/tmp","--secure-port=4443","--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname","--kubelet-use-node-status-port","--metric-resolution=15s","--kubelet-insecure-tls=true"],"image":"k8s.gcr.io/metrics-server/metrics-server:v0.6.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/livez","port":4443,"scheme":"HTTPS"},"periodSeconds":10,"timeoutSeconds":1},"name":"metrics-server","ports":[{"containerPort":4443,"name":"https","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/readyz","port":4443,"scheme":"HTTPS"},"initialDelaySeconds":20,"periodSeconds":10,"timeoutSeconds":1},"resources":{"requests":{"cpu":"100m","memory":"200Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-dir"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"system-cluster-critical","serviceAccountName":"metrics-server","volumes":[{"emptyDir":{},"name":"tmp-dir"}]}}}}
  creationTimestamp: "2024-12-03T23:33:48Z"
  generation: 1
  labels:
    k8s-app: metrics-server
  name: metrics-server
  namespace: kube-system
  resourceVersion: "2814"
  uid: 01b92993-467b-40e7-961b-f87f99b96c9c
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: metrics-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: metrics-server
    spec:
      containers:
      - args:
        - --cert-dir=/tmp
        - --secure-port=4443
        - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
        - --kubelet-use-node-status-port
        - --metric-resolution=15s
        - --kubelet-insecure-tls=true
        image: k8s.gcr.io/metrics-server/metrics-server:v0.6.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /livez
            port: 4443
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: metrics-server
        ports:
        - containerPort: 4443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 4443
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp
          name: tmp-dir
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: metrics-server
      serviceAccountName: metrics-server
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: tmp-dir
status:
  conditions:
  - lastTransitionTime: "2024-12-03T23:33:48Z"
    lastUpdateTime: "2024-12-03T23:33:48Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - lastTransitionTime: "2024-12-03T23:33:48Z"
    lastUpdateTime: "2024-12-03T23:34:57Z"
    message: ReplicaSet "metrics-server-6cbf7cc895" is progressing.
    reason: ReplicaSetUpdated
    status: "True"
    type: Progressing
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1

